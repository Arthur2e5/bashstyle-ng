#!/bin/bash
#########################################################
# 							#
# This is BashStyle-NG  				#
#							#
# Licensed under GNU GENERAL PUBLIC LICENSE v3    	#
#							#
# Copyright 2007 - 2010 Christopher Bratusek		#
#							#
#########################################################

source $BSNG_RC_DIR/internal/keys
source $BSNG_RC_DIR/internal/gconf

CURRENT_DATE="$(date +%Y-%m-%d-%I-%M)"

_export ()
{

	PROFILE=$2

	if [[ $PROFILE == "" ]]; then
		PROFILE=$HOME/bashstyle/profile-$CURRENT_DATE
		if [[ ! -e $HOME/bashstyle ]]; then \
			mkdir $HOME/bashstyle; \
		fi; \
	fi

	echo BashStyle-Profile > $PROFILE

	for array in ${BASH_KEYS[@]} ${ALIAS_KEYS[@]} ${COLOR_KEY[@]} \
		${DIRCOLOR_KEYS[@]} ${SEPARATOR_KEYS[@]} ${NANO_KEYS[@]} \
		${READLINE_KEYS[@]} ${SHOPT_KEYS[@]} ${VIMKEYS[@]}; do
		PREFIX=${array[!#]}
		echo "$key="\"$(get_key $key)\" >> $PROFILE
	done

	echo -e "Profile created in:${eiceblue} $PROFILE"

}

_import ()
{
	export BSNG_GCONF_READ=1

	if [[ $PROFILE == "" ]]; then \
		echo "No Profile given" && exit 1; \
	fi

	if [[ ! -e $PROFILE ]]; then \
		echo "Profile does not exist" && exit 1; \
	      	fi

	if [[ $(grep -w "BashStyle-Profile" $PROFILE) == "" ]]; then \
		echo "This is not a profile" && exit 1; \
	fi

	for key in $BASH_KEYS; do \
		echo $key
		if [[ $(grep -w $key $PROFILE) != "" ]]; then \
			gconftool-2 --set --type $(gconftool-2 -T /apps/bashstyle/$key) \
				/apps/bashstyle/$key "$(grep -w $key $PROFILE | sed -e "s/$key=//g" -e 's/\"//g' )" ; \
		fi; \
	done

	for key in $ALIAS_KEYS; do \
		echo alias/$key
		if [[ $(grep -w $key $PROFILE) != "" ]]; then \
			gconftool-2 --set --type $(gconftool-2 -T /apps/bashstyle/alias/$key) \
				/apps/bashstyle/alias/$key "$(grep -w $key $PROFILE | sed -e "s/$key=//g" -e 's/\"//g' )" ; \
		fi; \
	done

	for key in $COLOR_KEYS; do \
		echo color/$key
		if [[ $(grep -w $key $PROFILE) != "" ]]; then \
			gconftool-2 --set --type $(gconftool-2 -T /apps/bashstyle/color/$key) \
				/apps/bashstyle/color/$key "$(grep -w $key $PROFILE | sed -e "s/$key=//g" -e 's/\"//g' )" ; \
		fi; \
	done

	for key in $DIRCOLOR_KEYS; do \
		echo dircolors/$key
		if [[ $(grep -w $key $PROFILE) != "" ]]; then \
			gconftool-2 --set --type $(gconftool-2 -T /apps/bashstyle/dircolors/$key) \
				/apps/bashstyle/dircolors/$key "$(grep -w $key $PROFILE | sed -e "s/$key=//g" -e 's/\"//g' )" ; \
		fi; \
	done

	for key in $SEPARATOR_KEYS; do \
		echo separator/$key
		if [[ $(grep -w $key $PROFILE) != "" ]]; then \
			gconftool-2 --set --type $(gconftool-2 -T /apps/bashstyle/separator/$key) \
				/apps/bashstyle/separator/$key "$(grep -w $key $PROFILE | sed -e "s/$key=//g" -e 's/\"//g' )" ; \
			fi; \
	done

	for key in $READLINE_KEYS; do \
		echo readline/$key
		if [[ $(grep -w $key $PROFILE) != "" ]]; then \
			gconftool-2 --set --type $(gconftool-2 -T /apps/bashstyle/readline/$key) \
				/apps/bashstyle/readline/$key "$(grep -w $key $PROFILE | sed -e "s/$key=//g" -e 's/\"//g' )" ; \
		fi; \
	done

	for key in $SHOPT_KEYS; do \
		echo shopt/$key
		if [[ $(grep -w $key $PROFILE) != "" ]]; then \
			gconftool-2 --set --type $(gconftool-2 -T /apps/bashstyle/shopt/$key) \
			/apps/bashstyle/shopt/$key "$(grep -w $key $PROFILE | sed -e "s/$key=//g" -e 's/\"//g' )" ; \
		fi; \
	done

	for key in $VIM_KEYS; do \
		echo vim/$key
		if [[ $(grep -w $key $PROFILE) != "" ]]; then \
			gconftool-2 --set --type $(gconftool-2 -T /apps/bashstyle/vim/$key) \
				/apps/bashstyle/vim/$key "$(grep -w $key $PROFILE | sed -e "s/$key=//g" -e 's/\"//g' ) "; \
		fi; \
	done

	for key in $NANO_KEYS; do \
		echo nano/$key
		if [[ $(grep -w $key $PROFILE) != "" ]]; then \
			gconftool-2 --set --type $(gconftool-2 -T /apps/bashstyle/nano/$key) \
			/apps/bashstyle/nano/$key "$(grep -w $key $PROFILE | sed -e "s/$key=//g" -e 's/\"//g' ) "; \
		fi; \
	done

	echo "$PROFILE imported"

}

case $1 in

	*export )

		_export $1 $2

	;;

	*import )

		_import $1 $2

	;;

	* )

		echo -e "\n${ewhite}Usage:\n"
		echo -e "${eorange}bs-ng-profiler${ewhite} |${egreen} --export <profile>${eiceblue} [export a profile]\
		\n${eorange}bs-ng-profiler${ewhite} |${egreen} --import <profile>${eiceblue} [import a profile]" | column -t
		echo ""
		tput sgr0

	;;

esac
