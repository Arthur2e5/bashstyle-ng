#!/bin/bash
#########################################################
#                                                       #
# This is BashStyle-NG 		                        #
#                                                       #
# Licensed under GNU GENERAL PUBLIC LICENSE v3          #
#                                                       #
# Copyright 2007 - 2010 Christopher Bratusek            #
#                                                       #
#########################################################

_generate_inputrc()
{

	if [[ -e $HOME/.inputrc ]]; then
		mv $HOME/.inputrc $HOME/.inputrc.old
	fi

	. $BSNG_PREFIX/share/bashstyle-ng/rc/settings/readline-rc

	if [[ ! -e $HOME/bashstyle ]]; then
		mkdir $HOME/bashstyle
	fi

	echo "# This config file was generated by BashStyle-NG $BSNG_VERSION at $DATE" > $HOME/bashstyle/readline-rc.bs-ng-$DATE
	echo "# Use as \$HOME/.inputrc to apply settings" >> $HOME/bashstyle/readline-rc.bs-ng-$DATE

	cat $HOME/.inputrc >> $HOME/bashstyle/readline-rc.bs-ng-$DATE

	rm -f $HOME/.inputrc

	if [[ -e $HOME/.inputrc.old ]]; then
		mv $HOME/.inputrc.old $HOME/.inputrc
	fi

	echo -e "${ewhite}Readline configuration saved as ${eiceblue}$HOME/bashstyle/readline-rc.bs-ng-$DATE\
	\n${ewhite}copy it to ${egreen}$HOME/.inputrc${ewhite} to use it (disable ReadlineCFG in Bashstyle-NG,\
	\nbefore using this config-file - file will be overwritten else)\n"

	tput sgr0

}

_generate_vimrc()
{


	if [[ -e $HOME/.vimrc ]]; then
		mv $HOME/.vimrc $HOME/.vimrc.old
	fi

	. $BSNG_PREFIX/share/bashstyle-ng/rc/settings/vim-rc

	if [[ ! -e $HOME/bashstyle ]]; then
		mkdir $HOME/bashstyle
	fi

	echo "\" This config file was generated by BashStyle-NG $BSNG_VERSION at $DATE" > $HOME/bashstyle/vim-rc.bs-ng-$DATE
	echo "\" Use as \$HOME/.vimrc to apply settings" >> $HOME/bashstyle/vim-rc.bs-ng-$DATE

	cat $HOME/.vimrc >> $HOME/bashstyle/vim-rc.bs-ng-$DATE

	rm -f $HOME/.vimrc

	if [[ -e $HOME/.vimrc.old ]]; then
		mv $HOME/.vimrc.old $HOME/.vimrc
	fi

	echo -e "${ewhite}Vim configuration saved as: ${eiceblue}$HOME/bashstyle/vim-rc.bs-ng-$DATE\
	\n${ewhite}copy it to ${egreen}$HOME/.vimrc${ewhite} to use it (disable VimCFG in BashStyle-NG,\
	\nbefore using this config-file - file will be overwritten else)\n"

	tput sgr0

}

_generate_nanorc()
{


	if [[ -e $HOME/.nanorc ]]; then
		mv $HOME/.nanorc $HOME/.nanorc.old
	fi

	. $BSNG_PREFIX/share/bashstyle-ng/rc/settings/nano-rc

	if [[ ! -e $HOME/bashstyle ]]; then
		mkdir $HOME/bashstyle
	fi

	echo "# This config file was generated by BashStyle-NG $BSNG_VERSION at $DATE" > $HOME/bashstyle/nano-rc.bs-ng-$DATE
	echo "# Use as \$HOME/.nanorc to apply settings" >> $HOME/bashstyle/nano-rc.bs-ng-$DATE

	cat $HOME/.nanorc >> $HOME/bashstyle/nano-rc.bs-ng-$DATE

	rm -f $HOME/.nanorc

	if [[ -e $HOME/.nanorc.old ]]; then
		mv $HOME/.nanorc.old $HOME/.nanorc
	fi

	echo -e "${ewhite}Nano configuration saved as: ${eiceblue}$HOME/bashstyle/nano-rc.bs-ng-$DATE\
	\n${ewhite}copy it to ${green}$HOME/.nanorc${ewhite} to use it (disable NanoCFG in BashStyle-NG,\
	\nbefore using this config-file - file will be overwritten else)\n"

	tput sgr0

}
