#!/bin/bash
#########################################################
# 							#
# This is BashStyle-NG  				#
#							#
# Licensed under GNU GENERAL PUBLIC LICENSE v3    	#
#							#
# Copyright 2007 - 2010 Christopher Bratusek		#
#							#
#########################################################

top10 () {

	history | awk '{print $2}' |\
	awk 'BEGIN {FS="|"}{print $1}' |\
	sort | uniq -c | sort -n | tail | sort -nr

}

crypt () {

	if [[ -e $1 ]]; then
		tr a-zA-Z n-za-mN-ZA-M < $1 > $1.crypt
		rm -f $1
		mv $1.crypt $1
	fi

}

d2u () {

	if [[ -e $1 ]]; then
		sed -r 's/\r$//' -i $1
	fi

}

u2d () {

	if [[ -e $1 ]]; then
		sed -r 's/$/\r/' -i $1
	fi

}

torswitch () {

	if ! [[ $EUID == 0 ]]; then
		exit 1
	fi

	case $1 in
		*on )
			if [[ $(grep forward-socks4a /etc/privoxy/config) == "" ]]; then
				echo "forward-socks4a / 127.0.0.1:9050 ." >> /etc/privoxy/config
			else
				sed -e 's/\# forward-socks4a/forward-socks4a/g' -i /etc/privoxy/config
				/etc/init.d/tor restart
				/etc/init.d/privoxy restart
			fi
		;;

		*off )
			sed -e 's/forward-socks4a/\# forward-socks4a/g' -i /etc/privoxy/config
			/etc/init.d/tor restart
			/etc/init.d/privoxy restart
		;;
	esac

}

repoadd () {

	reprepro -Vb $1 include $2 *.changes
	cd $1/dists/$2
	gpg -abs -o Release.gpg Release

}

get_kernel () {

	if [[ $1 == "-s" ]]; then
		wget http://www.kernel.org/pub/linux/kernel/v2.6/linux-${2}.tar.bz2
	elif [[ $1 == "-t" ]]; then
		wget http://www.kernel.org/pub/linux/kernel/v2.6/testing/linux-${2}.tar.bz2
	elif [[ $1 == "-sg" ]]; then
		git clone git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-${2}.y.git
	elif [[ $1 == "-tg" ]]; then
		git clone git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6.git
	elif [[ $1 == "-z" ]]; then
		wget http://downloads.zen-kernel.org/${2}/${2}-zen${3}.patch.lzma
	fi

}

up () {

[ "${1/[^0-9]/}" == "$1" ] && {
        local ups=""
        for i in $(seq 1 $1)
        do
                ups=$ups"../"
        done
        cd $ups
        }

}

empty () {

	find -type f -empty

}

stop_watch () {

BEGIN=$(date +%s)

while true; do
    NOW=$(date +%s)
    DIFF=$(($NOW - $BEGIN))
    MINS=$(($DIFF / 60))
    SECS=$(($DIFF % 60))
    echo -ne "Time elapsed: $MINS:`printf %02d $SECS`\r"
    sleep .1
done

}

wipe () {

	cryptsetup -d /dev/urandom -c aes-xts-plain create delete $1
	shred -vzn 0 /dev/mapper/delete
	sync && sleep 4
	cryptsetup remove delete

}

remount () {

	mount -oremount,$@ $1

}

lscd () {

	cd ${1}
	if [[ ! $1 == "-" ]]; then
		echo -e "$(bs_ng_echo $yellow) $PWD\n"
	fi
	ls $LSCD_OPTS

}

bashtips () {

cat <<EOF
DIRECTORIES
-----------
~-          Previous working directory
pushd tmp   Push tmp && cd tmp
popd        Pop && cd

GLOBBING AND OUTPUT SUBSTITUTION
--------------------------------
ls a[b-dx]e Globs abe, ace, ade, axe
ls a{c,bl}e Globs ace, able
\$(ls)      \`ls\` (but nestable!)

HISTORY MANIPULATION
--------------------
!!        Last command
!?foo     Last command containing \`foo'
^foo^bar^ Last command containing \`foo', but substitute \`bar'
!!:0      Last command word
!!:^      Last command's first argument
!\$       Last command's last argument
!!:*      Last command's arguments
!!:x-y    Arguments x to y of last command
C-s       search forwards in history
C-r       search backwards in history

LINE EDITING
------------
M-d     kill to end of word
C-w     kill to beginning of word
C-k     kill to end of line
C-u     kill to beginning of line
M-r     revert all modifications to current line
C-]     search forwards in line
M-C-]   search backwards in line
C-t     transpose characters
M-t     transpose words
M-u     uppercase word
M-l     lowercase word
M-c     capitalize word

COMPLETION
----------
M-/     complete filename
M-~     complete user name
M-@     complete host name
M-\$    complete variable name
M-!     complete command name
M-^     complete history
EOF

}

bookmark () {

	if [[ $(grep go-$1= $HOME/.bookmarks) == "" ]]; then
		echo "alias go-$1='cd $PWD'" >> $HOME/.bookmarks
		. $HOME/.bookmarks
	else	echo "bookmark go-$1 already exists."
	fi

}

unmark () {

	if [[ $(grep $1= $HOME/.bookmarks) != "" ]]; then
		sed -e "/$1/d" -i $HOME/.bookmarks
		xunalias $1
	fi

}
